generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  adresse   Adresse?  @relation(fields: [adresseId], references: [id])
  adresseId String? @unique
  password  String
  commandes Commande[]
  avis      AvisProduit[]
}

model Produit {
  id          String          @id @default(cuid())
  nom         String
  slug        String          @unique
  description String
  prix        Int             // en centimes pour éviter les flottants
  image       String
  stock       Int
  type        String          // physique, virtuel, abonnement
  categorie   Categorie?      @relation(fields: [categorieId], references: [id])
  categorieId String?
  lignesCommande LigneCommande[]
  avis        AvisProduit[]
}

model Categorie {
  id        String      @id @default(cuid())
  nom       String
  slug      String      @unique
  parentId  String?
  parent    Categorie?  @relation("CategorieParent", fields: [parentId], references: [id])
  enfants   Categorie[] @relation("CategorieParent")
  produits  Produit[]
}

model Commande {
  id          String          @id @default(cuid())
  user        User            @relation(fields: [userId], references: [id])
  userId      String
  date        DateTime        @default(now())
  statut      String          // en cours, payé, expédié, annulé, etc.
  total       Int             // en centimes
  transporteur String
  lignesCommande LigneCommande[]
  avisLivraison AvisLivraison?
}

model LigneCommande {
  id         String   @id @default(cuid())
  commande   Commande @relation(fields: [commandeId], references: [id])
  commandeId String
  produit    Produit  @relation(fields: [produitId], references: [id])
  produitId  String
  quantite   Int
  prixUnitaire Int
}

model AvisProduit {
  id         String   @id @default(cuid())
  produit    Produit  @relation(fields: [produitId], references: [id])
  produitId  String
  client     User     @relation(fields: [userId], references: [id])
  userId     String
  note       Int
  commentaire String
  date       DateTime @default(now())
  modere     Boolean  @default(false)
  visible    Boolean  @default(false)
}

model AvisLivraison {
  id         String   @id @default(cuid())
  commande   Commande @relation(fields: [commandeId], references: [id])
  commandeId String   @unique
  note       Int
  commentaire String?
  date       DateTime @default(now())
}

model BoutiqueConfig {
  id                 String   @id @default(cuid())
  nom                String
  emailGerant        String
  adresse            Adresse? @relation(fields: [adresseId], references: [id])
  adresseId          String? @unique
  stripeTestKey      String
  stripeProdKey      String
  sendcloudTestKey   String
  sendcloudProdKey   String
  maintenanceMode    Boolean  @default(false)
  testMode           Boolean  @default(false)
}

model Adresse {
  id            String   @id @default(cuid())
  rue           String
  codePostal    String
  ville         String
  pays          String
  boutique      BoutiqueConfig?
  utilisateur   User?
}